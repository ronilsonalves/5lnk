definitions:
  domain.Link:
    properties:
      clicks:
        type: integer
      createdAt:
        type: string
      finalUrl:
        type: string
      id:
        type: string
      original:
        type: string
      pageRefer:
        type: string
      shortened:
        type: string
      title:
        type: string
      userId:
        type: string
    type: object
  domain.LinksPage:
    properties:
      alias:
        type: string
      createdAt:
        type: string
      description:
        type: string
      domain:
        type: string
      finalURL:
        type: string
      id:
        type: string
      imageURL:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      title:
        type: string
      userId:
        type: string
      views:
        type: integer
    type: object
  web.APIKey:
    properties:
      userId:
        type: string
    required:
    - userId
    type: object
  web.CreateLinksPage:
    properties:
      alias:
        type: string
      description:
        type: string
      domain:
        type: string
      imageURL:
        type: string
      links:
        items:
          $ref: '#/definitions/web.links'
        type: array
      title:
        type: string
      userId:
        type: string
    required:
    - alias
    - description
    - domain
    - imageURL
    - links
    - title
    - userId
    type: object
  web.CreateShortenURL:
    properties:
      alias:
        type: string
      domain:
        type: string
      pageRefer:
        type: string
      title:
        type: string
      url:
        type: string
      userId:
        type: string
    required:
    - url
    type: object
  web.LinksSummary:
    properties:
      clicks:
        type: integer
      total:
        type: integer
    type: object
  web.PagesSummary:
    properties:
      total:
        type: integer
      views:
        type: integer
    type: object
  web.Stats:
    properties:
      links:
        $ref: '#/definitions/web.LinksSummary'
      pages:
        $ref: '#/definitions/web.PagesSummary'
    type: object
  web.errorResponse:
    properties:
      message:
        type: string
      status:
        type: string
      statusCode:
        type: integer
      timeStamp:
        type: string
    type: object
  web.links:
    properties:
      original:
        type: string
      title:
        type: string
    required:
    - original
    - title
    type: object
info:
  contact:
    name: Ronilson Alves
    url: https://www.linkedin.com/in/ronilsonalves
  description: This API provide endpoints to link shortening.
  license:
    name: UNLICENSED
    url: https://github.com/ronilsonalves/5lnk/
  termsOfService: https://github.com/ronilsonalves/5lnk/blog/main/LICENSE.md
  title: 5lnk API
  version: 1.0.0
paths:
  /{shortened}:
    get:
      consumes:
      - application/json
      description: Redirect to original URL
      parameters:
      - description: Shortened URL
        in: path
        name: shortened
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Found
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Redirect to original URL
      tags:
      - Links
  /api/v1/apikeys:
    post:
      consumes:
      - application/json
      description: Create a new API Key. If the user already has an API Key, it will
        be revoked.
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/web.APIKey'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Create a new API Key
      tags:
      - API Keys
  /api/v1/apikeys/{userId}:
    delete:
      consumes:
      - application/json
      description: Delete an API Key.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Delete an API Key
      tags:
      - API Keys
    get:
      consumes:
      - application/json
      description: Retrieve an API Key.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Retrieve an API Key
      tags:
      - API Keys
  /api/v1/links:
    delete:
      consumes:
      - application/json
      description: Delete a shortened link from a long URL.
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.Link'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Delete a shortened link from a URL address and a provided alias
      tags:
      - Links
    post:
      consumes:
      - application/json
      description: Create a shortened link from a long URL.
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/web.CreateShortenURL'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Link'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Create a shortened link from a URL address and a provided alias
      tags:
      - Links
    put:
      consumes:
      - application/json
      description: Update a shortened link from a long URL.
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.Link'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Link'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Update a shortened link from a URL address and a provided alias
      tags:
      - Links
  /api/v1/links/{id}:
    get:
      consumes:
      - application/json
      description: Get a shortened link from a long URL.
      parameters:
      - description: Link ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Link'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get a shortened link from a URL address and a provided alias
      tags:
      - Links
  /api/v1/links/user/{userId}:
    get:
      consumes:
      - application/json
      description: Get all shortened links by user.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Link'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get all shortened links by user
      tags:
      - Links
  /api/v1/pages:
    delete:
      consumes:
      - application/json
      description: Delete a linksPage.
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.LinksPage'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Delete a linksPage
      tags:
      - Pages
    post:
      consumes:
      - application/json
      description: Create a new linksPage.
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/web.CreateLinksPage'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.LinksPage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Create a new linksPage
      tags:
      - Pages
    put:
      consumes:
      - application/json
      description: Update a linksPage.
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/domain.LinksPage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.LinksPage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Update a linksPage
      tags:
      - Pages
  /api/v1/pages/{alias}:
    get:
      consumes:
      - application/json
      description: Get a linksPage by alias.
      parameters:
      - description: Page alias
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.LinksPage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get a linksPage
      tags:
      - Pages
  /api/v1/pages/user/{userId}:
    get:
      consumes:
      - application/json
      description: Get all linksPage by user.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.LinksPage'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get all linksPage by user
      tags:
      - Pages
  /api/v1/stats/user/{userId}:
    get:
      consumes:
      - application/json
      description: Returns a summary of the user links and pages stats.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Stats'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.errorResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Returns a summary of the user links and pages stats.
      tags:
      - Stats
swagger: "2.0"
